TIP: Good vs bad examples of commit messages:

# Bad: "Update UI and fix backend bug"
# Good: "feat: add responsive navbar" + "fix: resolve user auth timeout"

There's a method to this that looks like:

<type>: <description>
# Examples:
feat: add user registration endpoint  
fix: resolve image upload timeout  
docs: update API usage guide  
chore: update dependencies  

Also, if you've done a few "fixed typo" or "added missing semicolon" use git rebase to merge these before you push them.

git rebase -i HEAD~5  # Squash last 5 commits into one

Commit when you finish a logical task (not every 5 minutes).

Write clear, descriptive messages.

Your commit history is a storytelling toolâ€”make it easy to follow!